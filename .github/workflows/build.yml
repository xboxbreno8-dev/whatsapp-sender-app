name: Build WhatsApp Sender APK

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04  # Usar Ubuntu 20.04 mais estável

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Java 8 (mais compatível com buildozer)
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '8'
        
    - name: Setup Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y \
          git zip unzip openjdk-8-jdk python3-pip \
          autoconf libtool pkg-config \
          zlib1g-dev libncurses5-dev libncursesw5-dev \
          cmake libffi-dev libssl-dev \
          build-essential ccache \
          libssl1.0-dev

    - name: Setup Android SDK/NDK manually
      run: |
        # Criar diretórios
        mkdir -p ~/.buildozer/android
        cd ~/.buildozer/android
        
        # Download Android SDK Command Line Tools
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
        unzip -q commandlinetools-linux-8512546_latest.zip
        mkdir -p cmdline-tools/latest
        mv cmdline-tools/* cmdline-tools/latest/ 2>/dev/null || true
        
        # Configurar variáveis de ambiente
        export ANDROID_HOME=$HOME/.buildozer/android
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
        
        # Aceitar licenças e instalar componentes necessários
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-31" "build-tools;31.0.0" "platform-tools"
        
        # Verificar se AIDL foi instalado
        ls -la $ANDROID_HOME/build-tools/31.0.0/
        
        # Adicionar ao PATH permanentemente para próximos steps
        echo "ANDROID_HOME=$HOME/.buildozer/android" >> $GITHUB_ENV
        echo "$HOME/.buildozer/android/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$HOME/.buildozer/android/platform-tools" >> $GITHUB_PATH
        echo "$HOME/.buildozer/android/build-tools/31.0.0" >> $GITHUB_PATH

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer==1.4.0 cython==0.29.33

    - name: Cache buildozer directories
      uses: actions/cache@v4
      with:
        path: |
          ~/.buildozer
          .buildozer
        key: buildozer-cache-${{ hashFiles('buildozer.spec') }}-v2

    - name: Verify AIDL installation
      run: |
        echo "Verificando instalação do AIDL..."
        find $ANDROID_HOME -name "aidl" -type f || echo "AIDL não encontrado ainda"
        echo "BUILD_TOOLS PATH:"
        ls -la $ANDROID_HOME/build-tools/*/

    - name: Build APK with buildozer
      run: |
        # Configurar variáveis de ambiente para buildozer
        export ANDROID_HOME=$HOME/.buildozer/android
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/31.0.0
        
        # Debug: mostrar informações do ambiente
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "PATH: $PATH"
        echo "Java version:"
        java -version
        echo "Python version:"
        python --version
        echo "Buildozer version:"
        buildozer version
        
        # Build com verbose para debug
        buildozer android debug -v

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: whatsapp-sender-debug-apk
        path: bin/*.apk
        retention-days: 30
        
    - name: Upload build logs (if failed)
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: build-logs
        path: |
          .buildozer/
          ~/.buildozer/
        retention-days: 7
